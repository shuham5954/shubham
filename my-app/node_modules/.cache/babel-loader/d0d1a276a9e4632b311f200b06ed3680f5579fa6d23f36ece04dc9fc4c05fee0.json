{"ast":null,"code":"var _jsxFileName = \"D:\\\\protfolio web\\\\my-app\\\\src\\\\components\\\\work\\\\Works.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { projectsData } from './Data';\nimport { projectsNav } from './Data';\nimport WorkItems from './WorkItems';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Works() {\n  _s();\n  const [item, setItem] = useState({\n    name: 'all'\n  });\n  const [projects, setProjects] = useState([]);\n  const [active, setActive] = useState(0);\n  useEffect(() => {\n    if (item.name === \"all\") {\n      setProjects(projectsData);\n    } else {\n      const newProjects = projectsData.filter(project => {\n        return project.category === item.name;\n      });\n      setProjects(newProjects);\n    }\n  }, [item]);\n  const handleClick = (e, index) => {\n    setItem({\n      name: e.target.textContent\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work__filters\",\n      children: projectsNav.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: e => handleClick(e, index),\n          className: \"work__item\",\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work__container container grid\",\n      children: projects.map(item => {\n        return /*#__PURE__*/_jsxDEV(WorkItems, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Works, \"rJgXw0A8c1EOlQUxikSyDDK3BKs=\");\n_c = Works;\nexport default Works;\nvar _c;\n$RefreshReg$(_c, \"Works\");","map":{"version":3,"names":["React","useEffect","useState","projectsData","projectsNav","WorkItems","jsxDEV","_jsxDEV","Works","_s","item","setItem","name","projects","setProjects","active","setActive","newProjects","filter","project","category","handleClick","e","index","target","textContent","children","className","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["D:/protfolio web/my-app/src/components/work/Works.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { projectsData } from './Data';\r\nimport { projectsNav } from './Data';\r\nimport WorkItems from './WorkItems';\r\n\r\n\r\nfunction Works() {\r\n    const [item,setItem] = useState({name : 'all'});\r\n    const [projects,setProjects] = useState([]);\r\n    const [active,setActive] = useState(0);\r\n\r\n\r\n    useEffect(()=> {\r\n        if(item.name === \"all\"){\r\n            setProjects(projectsData);\r\n        }\r\n\r\n        else {\r\n            const newProjects =projectsData.filter((project) => {\r\n                return project.category === item.name;\r\n            });\r\n            setProjects(newProjects);\r\n        }\r\n\r\n\r\n    } ,[item]);\r\n\r\n      const handleClick = (e,index) => {\r\n        setItem({name: e.target.textContent});\r\n      }\r\n\r\n  return ( \r\n    <div>\r\n        <div className=\"work__filters\">\r\n            {\r\n                projectsNav.map((item,index)=>{\r\n                    return (\r\n                        <span onClick={(e)=> handleClick(e,index)} className='work__item' key ={index}>\r\n                        {item.name}\r\n                        </span>\r\n                    )\r\n\r\n                }\r\n            )}\r\n        </div>\r\n        <div className=\"work__container container grid\">\r\n            {projects.map((item) =>{\r\n                return <WorkItems item={item} key={item.id} />\r\n            })}\r\n\r\n        </div>\r\n    </div>\r\n     \r\n  )\r\n}\r\n\r\nexport default Works"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,QAAQ;AACrC,SAASC,WAAW,QAAQ,QAAQ;AACpC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAACU,IAAI,EAAG;EAAK,CAAC,CAAC;EAC/C,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACa,MAAM,EAACC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAGtCD,SAAS,CAAC,MAAK;IACX,IAAGS,IAAI,CAACE,IAAI,KAAK,KAAK,EAAC;MACnBE,WAAW,CAACX,YAAY,CAAC;IAC7B,CAAC,MAEI;MACD,MAAMc,WAAW,GAAEd,YAAY,CAACe,MAAM,CAAEC,OAAO,IAAK;QAChD,OAAOA,OAAO,CAACC,QAAQ,KAAKV,IAAI,CAACE,IAAI;MACzC,CAAC,CAAC;MACFE,WAAW,CAACG,WAAW,CAAC;IAC5B;EAGJ,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAER,MAAMW,WAAW,GAAGA,CAACC,CAAC,EAACC,KAAK,KAAK;IAC/BZ,OAAO,CAAC;MAACC,IAAI,EAAEU,CAAC,CAACE,MAAM,CAACC;IAAW,CAAC,CAAC;EACvC,CAAC;EAEL,oBACElB,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAKoB,SAAS,EAAC,eAAe;MAAAD,QAAA,EAEtBtB,WAAW,CAACwB,GAAG,CAAC,CAAClB,IAAI,EAACa,KAAK,KAAG;QAC1B,oBACIhB,OAAA;UAAMsB,OAAO,EAAGP,CAAC,IAAID,WAAW,CAACC,CAAC,EAACC,KAAK,CAAE;UAACI,SAAS,EAAC,YAAY;UAAAD,QAAA,EAChEhB,IAAI,CAACE;QAAI,GAD8DW,KAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAEtE;MAGf,CAAC;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC,eACN1B,OAAA;MAAKoB,SAAS,EAAC,gCAAgC;MAAAD,QAAA,EAC1Cb,QAAQ,CAACe,GAAG,CAAElB,IAAI,IAAI;QACnB,oBAAOH,OAAA,CAACF,SAAS;UAACK,IAAI,EAAEA;QAAK,GAAMA,IAAI,CAACwB,EAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAClD,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAGV;AAACxB,EAAA,CAhDQD,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AAkDd,eAAeA,KAAK;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}